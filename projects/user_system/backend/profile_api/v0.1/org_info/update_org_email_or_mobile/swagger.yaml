openapi: 3.0.3

info:
  version: 0.0.1
  title: Profile Backend Project - Operations Of Organization
  description: >-
    本文档主要展示组织owner用户修改组织的邮箱或者是电话号码时的相关的请求规范
    <br/>
    <br/>
    **项目服务器访问域名&根目录:** https://profile.dev.datareachable.net/api/v1/org/
    <br/>
    <br/>
    **Github项目地址:**
      - [User Profile API Server](https://github.com/dataReachable/dr_Back_UserSystemProfile)
  contact:
    name: Backend Team
    email: jiasehng.jing@datareachable.com

servers:
  - url: "https://profile.dev.datareachable.net/api/v1/org/"
    description: Sydney Development Cluster

paths:
  /request:
    post:
      tags:
        - "发送验证码"
      summary: "发送验证码"
      description: "发送验证码！"
      requestBody:
        required: true
        description: "> `这个请求中只允许出现一个电话号码对象参数或者是一个有效邮箱参数，二者不可同时出现`"
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/Req_requestBody1"
                - $ref: "#/components/schemas/Req_requestBody2"
      responses:
        "200":
          description: "校验码发送成功！"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Res_requestSuccess"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Res_GenericBadFields"
                  - $ref: "#/components/schemas/Res_CodeSendEmailUpdate_BadEmail"
                  - $ref: "#/components/schemas/Res_CodeSendPasswordUpdate_BadEmail"
                  - $ref: "#/components/schemas/Res_CodeSendMobileUpdate_BadMobile"
                  - $ref: "#/components/schemas/Res_CodeSendPasswordUpdate_BadMobile"
        "429":
          $ref: "#/components/responses/RateLimit"
        "500":
          description: "服务器发生错误时的响应"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Res_GenericInternalError"

  /verify:
    post:
      tags:
        - "校验验证码"
      summary: "校验验证码"
      description: "校验验证码！"

      requestBody:
        required: true
        description: "`校验验证码的时候只需要sessionCode和code两个参数即可`"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Req_verifyBody"

      responses:
        "200":
          description: "验证码校验成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Res_verifySuccess"
        "429":
          $ref: "#/components/responses/RateLimit"
        "400":
          description: "由于各种原因导致的验证失败"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Res_GenericBadFields"
                  - $ref: "#/components/schemas/Res_CodeSendEmailUpdate_BadEmail"
                  - $ref: "#/components/schemas/Res_CodeSendPasswordUpdate_BadEmail"
                  - $ref: "#/components/schemas/Res_CodeSendMobileUpdate_BadMobile"
                  - $ref: "#/components/schemas/Res_CodeSendPasswordUpdate_BadMobile"
        "500":
          description: "服务器发生错误时的响应"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Res_GenericInternalError"

  /update/email_or_mobile:
    put:
      tags:
        - "更新组织邮箱或者是电话"
      summary: "更新组织邮箱或者是电话"
      description: "更新组织邮箱或者是电话！"
      parameters:
        - name: DR-AUTH
          in: header
          required: true
          description: The Json web token (JWT) issued by the backend in the entry page.
          schema:
            type: string
      requestBody:
        required: true
        description: "`更新组织邮箱的请求中邮箱和电话需要一定指包含其中一个参数，二者不可同时出现，并且由于组织中的电话号码不止一个，所以在修改的时候需要旧的电话号码的相关参数，与新电话号码格式相同。还需要带上新电话号码的验证码`"
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/Req_updateEmailOrMobileBody1"
                - $ref: "#/components/schemas/Req_updateEmailOrMobileBody2"

      responses:
        "200":
          description: "更新邮箱或者电话成功"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Res_updateOrgPhoneSuccess"
                  - $ref: "#/components/schemas/Res_updateOrgEmailSuccess"
        "400":
          description: "各种原因导致的更新失败"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Res_GenericBadFields"
                  - $ref: "#/components/schemas/Res_CodeSendEmailUpdate_BadEmail"
                  - $ref: "#/components/schemas/Res_CodeSendPasswordUpdate_BadEmail"
                  - $ref: "#/components/schemas/Res_CodeSendMobileUpdate_BadMobile"
                  - $ref: "#/components/schemas/Res_CodeSendPasswordUpdate_BadMobile"
        "403":
          description: "用户没有权限执行该操作"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Res_DeniedPermission"
                  - $ref: "#/components/schemas/Res_DeniedTokenDiffer"
        "500":
          description: "服务器发生错误时的响应"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Res_GenericInternalError"

components:

  responses:
    RateLimit:
      description: >-
        Too many requests.
        The rate limit is controlled by a [sliding window](https://cloud.google.com/solutions/rate-limiting-strategies-techniques#techniques-enforcing-rate-limits) of 60 seconds. Each endpoint (or group thereof) defines separate request caps within these bounds.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Res_RateLimit"

  schemas:
    # -------------------响应体相关
    code:
      type: number
      description: "自定义响应码"
    message:
      type: string
      description: "响应简要信息"
    error:
      type: string
      description: "请求发生错误时的详细信息！"
    #---------------------文件上传部分
    Res_Generic:
      type: object
      properties:
        code:
          type: number
          description: "A 6-digit status code."
          example: 200000
        message:
          type: string
          description: "A user-friendly message describing the status of the response."
          example: "Success!"
    Req_updateOrganizationLogoBody:
      properties:
        file:
          type: object
          required:
            - "name"
            - "files"
          description: >-
            Frontend must upload `one and only one` file as the user avatar. Multiple file uploads are rejected by the backend.
            <br/>
            The input field needs to have a `name` tag.
            <br/>
            The size of the avatar is limited to `10MB` by the backend.
          properties:
            name:
              type: string
            files:
              type: array
              minimum: 1
              maximum: 1
              items:
                type: string
                format: binary
    Res_updateOrganizationLogoSuccess:
      allOf:
        - $ref: "#/components/schemas/Res_Generic"
      example: { code: 200003, message: "Logo has been uploaded.", data: { url: "https://xxxx.aws.com" } }
    Res_updateOrganizationLogo_NoFileUploaded:
      allOf:
        - $ref: "#/components/schemas/Res_Generic"
      example: { code: 400004, message: "Invalid Input: No files were uploaded" }
    Res_updateOrganizationLogo_FileNotFound:
      allOf:
        - $ref: "#/components/schemas/Res_Generic"
      example: { code: 400004, message: "Invalid Input: Target input file name XXX NOT found" }
    Res_updateOrganizationLogo_MultipleFiles:
      allOf:
        - $ref: "#/components/schemas/Res_Generic"
      example: { code: 400004, message: "Invalid Input: Multiple files are uploaded under input file name XXX" }
    Res_AccessDenied_UserNotOwner:
      allOf:
        - $ref: "#/components/schemas/Res_Generic"
      example: { code: 401002, message: "Unauthorized: User is not the organization owner!" }
    Res_AccessDenied_JWTNotFound:
      allOf:
        - $ref: "#/components/schemas/Res_Generic"
      example: { code: 401001, message: "JWT not found in the header, access denied!" }
    Res_AccessDenied_JWTValidationFailure:
      allOf:
        - $ref: "#/components/schemas/Res_Generic"
      example: { code: 401001, message: "JWT validation failed, access denied!" }
    Res_AccessDenied_SessionTimeOut:
      allOf:
        - $ref: "#/components/schemas/Res_Generic"
      example: { code: 403001, message: "Session time out, access denied!" }
    Res_GenericInternalError:
      allOf:
        - $ref: "#/components/schemas/Res_Generic"
        - type: object
          properties:
            data:
              type: object
              description: The data payload of the response
              properties:
                error:
                  description: Details of the specific error, helpful to locate the error source.
                  type: string
      example: { code: 500000, message: "General error message", data: { error: "Details of the error goes here" } }
    #定制化部分---------------------

    # ---------------------------------------------请求体相关
    # 发送验证码请求体
    Req_requestBody1:
      required:
        - "sessionCode"
        - "mobile"
        - "email"
      description: "发送验证码请求体！"
      type: object
      properties:
        sessionCode:
          type: string
          description: "前端传入的设备指纹"
          example: "a2f5051d-375c-40dd-b236-415f5472ac67"
        mobile:
          type: object
          description: "组织的电话"
          properties:
            country:
              type: string
              description: "电话的国家代码"
              example: "61"
            number:
              type: string
              description: "电话号码"
              example: "15071594541"
            area:
              type: string
              description: "国家中省市的地区号"
              example: "010"

    Req_requestBody2:
      required:
        - "sessionCode"
        - "mobile"
        - "email"
      description: "发送验证码请求体！"
      type: object
      properties:
        sessionCode:
          type: string
          description: "前端传入的设备指纹"
          example: "a2f5051d-375c-40dd-b236-415f5472ac67"
        email:
          type: string
          description: "公司邮箱"
          example: "j_jiasheng@qq.com"

    # 校验验证码的请求体
    Req_verifyBody:
      required:
        - "sessionCode"
        - "code"
      description: "校验验证码请求体"
      type: object
      properties:
        sessionCode:
          type: string
          description: "前端传入的设备指纹"
          example: "a2f5051d-375c-40dd-b236-415f5472ac67"
        code:
          type: string
          description: "接收到的验证码"
          example: "123456"

    # 更新组织邮箱和电话号码请求体
    Req_updateEmailOrMobileBody1:
      required:
        - "sessionCode"
        - "organizationName"
        - "code"
        - "mobile"
        - "oldMobile"
      description: "更新组织邮箱或者手机号请求体"
      type: object
      properties:
        sessionCode:
          type: string
          description: "前端传入的设备指纹"
          example: "a2f5051d-375c-40dd-b236-415f5472ac67"
        organizationName:
          type: string
          description: "组织的名称"
          example: "travis的组织001"
        code:
          type: string
          description: "接收到的新邮箱或者是电话的验证码"
          example: "123456"
        oldMobile:
          type: object
          description: "需要替换或者修改的旧电话的详细信息"
          properties:
            country:
              type: string
              description: "旧电话的国家代码"
              example: "61"
            number:
              type: string
              description: "旧电话的号码段"
              example: "15071594541"
            area:
              type: string
              description: "旧电话的区号"
              example: "010"
        mobile:
          type: object
          description: "新电话"
          properties:
            country:
              type: string
              description: "新电话的国家代码"
              example: "61"
            number:
              type: string
              description: "新电话的号码段"
              example: "15071594542"
            area:
              type: string
              description: "新电话的区号"
              example: "010"

    Req_updateEmailOrMobileBody2:
      required:
        - "sessionCode"
        - "organizationName"
        - "code"
        - "mobile"
        - "oldMobile"
      description: "更新组织邮箱或者手机号请求体"
      type: object
      properties:
        sessionCode:
          type: string
          description: "前端传入的设备指纹"
          example: "a2f5051d-375c-40dd-b236-415f5472ac67"
        organizationName:
          type: string
          description: "组织名称"
          example: "travis的组织002"
        code:
          type: string
          description: "邮箱接收到的验证码"
          example: "123456"
        email:
          type: string
          description: "新邮箱地址"
          example: "j_jiasheng@qq.com"


    # ---------------------------------------------成功响应相关
    # 成功发送验证码响应
    Res_requestSuccess:
      description: "成功发送组织成员邀请短信！"
      type: object
      properties:
        code:
          $ref: "#/components/schemas/code"
        message:
          $ref: "#/components/schemas/message"
      example: {
        code: 200110,
        message: "发送成功，请注意查收！"
      }
    # 验证验证码成功响应
    Res_verifySuccess:
      description: "成功发送组织成员邀请邮件！"
      type: object
      properties:
        code:
          $ref: "#/components/schemas/code"
        message:
          $ref: "#/components/schemas/message"
      example: {
        code: 200111,
        message: "校验验证码成功！"
      }
    # 组织更新邮箱或者电话成功响应
    Res_updateOrgEmailSuccess:
      description: "成功更新组织的邮箱！"
      type: object
      properties:
        code:
          $ref: "#/components/schemas/code"
        message:
          $ref: "#/components/schemas/message"
      example: {
        code: 200100,
        message: "组织：dr-travis邮箱：j_jiasheng@qq.com更新成功！"
      }
      # 组织更新邮箱或者电话成功响应
    Res_updateOrgPhoneSuccess:
      description: "成功更新组织的电话！"
      type: object
      properties:
        code:
          $ref: "#/components/schemas/code"
        message:
          $ref: "#/components/schemas/message"
      example: {
        code: 200101,
        message: "组织：dr-travis电话：+61450492014更新成功！"
      }

    # ----------------------------------------------服务器拒绝响应
    # 权限不足
    Res_DeniedPermission:
      description: "用户权限不足，无法执行操作！"
      type: object
      properties:
        code:
          $ref: "#/components/schemas/code"
        message:
          $ref: "#/components/schemas/message"
      example: { code: 403101, message: "请检查是否有权限执行此操作！" }
    # tokens-userName验证不一致
    Res_DeniedTokenDiffer:
      description: "用户输入了操作员的userName，但与当前登录token不一致！"
      type: object
      properties:
        code:
          $ref: "#/components/schemas/code"
        message:
          $ref: "#/components/schemas/message"
      example: { code: 403102, message: "用户身份验证不通过！请核验用户名：张三是否为当前登录用户名" }
    # ----------------------------------------------服务器异常相关
    # 服务器异常导致邀请组织成员消息发送失败！
    Res_SendInviteMessageToOrgFailedWithServerError:
      description: "服务器异常导致邀请组织成员消息发送失败！"
      type: object
      properties:
        code:
          $ref: "#/components/schemas/code"
        message:
          $ref: "#/components/schemas/message"
        data:
          type: object
          properties:
            error:
              $ref: "#/components/schemas/error"
      example: {
        code: 500110,
        message: "[ SendMessageToGroupMemberController ]:发送邀请组织成员信息的时候服务器发生未知错误！",
        data: {
          error: "错误详情：xxx"
        }
      }
    # 服务器异常导致邀请团队成员消息发送失败！
    Res_SendInviteMessageToGroupFailedWithServerError:
      description: "服务器异常导致邀请团队成员消息发送失败！"
      type: object
      properties:
        code:
          $ref: "#/components/schemas/code"
        message:
          $ref: "#/components/schemas/message"
        data:
          type: object
          properties:
            error:
              $ref: "#/components/schemas/error"
      example: {
        code: 500111,
        message: "[ SendMessageToGroupMemberController ]:发送邀请团队成员信息的时候服务器发生未知错误！",
        data: {
          error: "错误详情：xxx"
        }
      }

    # ------------------------------------------------失败响应相关
    Res_GenericBadFields:
      type: object
      properties:
        code:
          type: number
          description: "A 6-digit status code."
          example: 200000
        message:
          type: string
          description: "A user-friendly message describing the status of the response."
          example: "Success!"
      example: { code: 400001, message: "The error of the fields will be described here." }

    Res_CodeSendEmailUpdate_BadEmail:
      type: object
      properties:
        code:
          type: number
          description: "A 6-digit status code."
          example: 200000
        message:
          type: string
          description: "A user-friendly message describing the status of the response."
          example: "Success!"
      example: { code: 400006, message: "Email has already been registered. Can NOT send to registered Email address!" }

    Res_CodeSendPasswordUpdate_BadEmail:
      type: object
      properties:
        code:
          type: number
          description: "A 6-digit status code."
          example: 200000
        message:
          type: string
          description: "A user-friendly message describing the status of the response."
          example: "Success!"
      example: { code: 400006, message: "Email has NOT been registered. Can NOT send to unregistered Email address!" }

    Res_CodeSendMobileUpdate_BadMobile:
      type: object
      properties:
        code:
          type: number
          description: "A 6-digit status code."
          example: 200000
        message:
          type: string
          description: "A user-friendly message describing the status of the response."
          example: "Success!"
      example: { code: 400006, message: "Mobile has already been registered. Can NOT send to registered mobile number!" }

    Res_CodeSendPasswordUpdate_BadMobile:
      type: object
      properties:
        code:
          type: number
          description: "A 6-digit status code."
          example: 200000
        message:
          type: string
          description: "A user-friendly message describing the status of the response."
          example: "Success!"
      example: { code: 400006, message: "Mobile has NOT been registered. Can NOT send to unregistered mobile number!" }

    Res_RateLimit:
      allOf:
        - $ref: "#/components/schemas/Res_Generic"
      example: { code: 429000, message: "You've made too many requests for new codes. Please wait a minute." }

    Res_CodeValidation_Failure:
      type: object
      properties:
        code:
          type: number
          description: "A 6-digit status code."
          example: 200000
        message:
          type: string
          description: "A user-friendly message describing the status of the response."
          example: "Success!"
      example: { code: 400005, message: "Sorry, the code you entered is invalid. Please double check or request a new code." }
